📚 Day 52 - Learning Laravel: Laravel Controller Resource Methods - Setup Routes

1️⃣ Resource Route:
-> Add "Route::resource('posts', PostController::class);" in web.php of routes folder of Laravel project.
-> This will create 7 routes for CRUD operations on posts table in database. i.e.:
    | HTTP Method | URI                | Controller Method | Purpose                        |
    | ----------- | ------------------ | ----------------- | ------------------------------ |
    | GET         | /posts             | `index()`         | Show all posts                 |
    | GET         | /posts/create      | `create()`        | Show form to create a new post |
    | POST        | /posts             | `store()`         | Store a new post               |
    | GET         | /posts/{post}      | `show()`          | Show a single post             |
    | GET         | /posts/{post}/edit | `edit()`          | Show form to edit a post       |
    | PUT/PATCH   | /posts/{post}      | `update()`        | Update a post                  |
    | DELETE      | /posts/{post}      | `destroy()`       | Delete a post                  |

    🎯 Why use it?
        -> Saves time: You don’t need to write 7 routes manually.
        -> Follows RESTful structure: Keeps your code organized and clean.


2️⃣ Resource Controller Methods:
-> In PostController.php, add the following methods:
    public function index()
    {
        $posts = Post::all(); // Get all posts from the database
        return view('posts.index', compact('posts')); // Return the index view with all posts
    }
    ✅ Shows a list of all posts

    public function create()
    {
        return view('posts.create'); // Return the form view to create a new post
    }
    ✅ Displays the form to create a new post

    public function store(Request $request)
    {
        // Validate the form data
        $validated = $request->validate([
            'title' => 'required',   // title field is required
            'message' => 'required', // message field is required
        ]);

        Post::create($validated); // Create a new post using the validated data
        return redirect()->route('posts.index')->with('success', 'Post created Successfully!');
    }
    ✅ Handles form submission and saves a new post to the database

    public function edit($id)
    {
        $post = Post::findOrFail($id); // Find the post by ID or show 404 error if not found
        return view('posts.edit', compact('post')); // Return the edit form view with the post data
    }
    ✅ Displays the form to edit a specific post

    public function update(Request $request, $id)
    {
        // Validate the updated data
        $validated = $request->validate([
            'title' => 'required',
            'message' => 'required',
        ]);

        $post = Post::findOrFail($id); // Find the post by ID
        $post->update($validated);     // Update the post with new data
        return redirect()->route('posts.index')->with('success', 'Post updated Successfully!');
    }
    ✅ Updates the existing post with the new data

    public function destroy($id)
    {
        $post = Post::findOrFail($id); // Find the post by ID
        $post->delete();               // Delete the post
        return redirect()->route('posts.index')->with('success', 'Post deleted Successfully!');
    }
    ✅ Deletes the specified post from the database
