
📚 Day 40 Learning: Laravel Documentation, Installation, and Setup

🔹 What is Laravel?
Laravel is a popular PHP web framework used to build web applications using a clean and elegant syntax. It follows the MVC (Model-View-Controller) architectural pattern and provides tools for routing, database management, authentication, and more.

────────────────────────────────────────────
✅ 1. Prerequisites:
────────────────────────────────────────────
Before installing Laravel, make sure you have:
1️⃣ PHP >= 8.1
2️⃣ Composer (PHP dependency manager)
3️⃣ MySQL or other supported database (for testing database)
4️⃣ Node.js and NPM (for frontend assets)

────────────────────────────────────────────
✅ 2. Installing Composer (if not installed):
────────────────────────────────────────────
🔸 Visit https://getcomposer.org/download/
🔸 Follow platform-specific installation instructions

Check Composer version:
    composer -V

────────────────────────────────────────────
✅ 3. Install Laravel via Composer:
────────────────────────────────────────────
You can install Laravel globally or per project.

🔹 Globally (optional):
    composer global require laravel/installer

🔹 Create a new Laravel project:
    laravel new project-name
    OR
    composer create-project laravel/laravel project-name

────────────────────────────────────────────
✅ 4. Serve Laravel Project:
────────────────────────────────────────────
Move to the project folder:
    cd project-name

Start the local development server:
    php artisan serve

Open in browser:
    http://localhost:8000

────────────────────────────────────────────
✅ 5. Configure Environment (.env file):
────────────────────────────────────────────
Update database and app settings in `.env` file:
    APP_NAME="YourAppName"
    APP_URL=http://localhost:8000
    DB_DATABASE=your_db_name
    DB_USERNAME=root
    DB_PASSWORD=your_password

Run migrations:
    php artisan migrate

────────────────────────────────────────────
✅ 6. Laravel Directory Structure (important folders):
────────────────────────────────────────────
🔸 routes/web.php → Define web routes
🔸 resources/views → Blade templates (HTML files)
🔸 app/Http/Controllers → Controllers (logic)
🔸 public → Public assets like CSS, JS
🔸 database/migrations → DB structure

────────────────────────────────────────────
✅ 7. Useful Artisan Commands:
────────────────────────────────────────────
php artisan list                         → List all commands
php artisan make:controller TestCtrl     → Create new controller
php artisan make:model Post -m           → Create model with migration
php artisan migrate                      → Run migrations
php artisan route:list                   → View all routes

────────────────────────────────────────────
✅ 8. Running Frontend (Optional):
────────────────────────────────────────────
Install dependencies:
    npm install

Compile assets:
    npm run dev
(For production: npm run build)

────────────────────────────────────────────
🎯 Tips:
────────────────────────────────────────────
🔹 Always commit your code to Git
🔹 Use Laravel documentation: https://laravel.com/docs
🔹 You can use Laravel Sail for Docker-based setup (optional)

──── End of Day 40 Laravel Learning ────
