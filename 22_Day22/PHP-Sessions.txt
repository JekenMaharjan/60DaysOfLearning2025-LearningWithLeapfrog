📚 PHP Sessions:
-> A session is a way to store information (in variables) to be used across multiple pages.
-> Unlike a cookie, the information is not stored on the users computer.

1️⃣ What is a PHP Session?
-> When we use an application, we open it, do something, and then close it. The app remembers who we are while we’re using it. This is called a session.
-> But on the internet, it's different. The web server doesn’t remember who we are or what we do between pages, because HTTP doesn’t store any information (it’s stateless).
-> To solve this, we use session variables in PHP. They help store user information (like username, favorite color, etc.) so it can be used across multiple pages.
-> Session variables:
    🔹 Are available throughout the whole website for that user.
    🔹 Last until the browser is closed.
-> This helps the website remember users during their visit.
-> Tip: If you need a permanent storage, you may want to store the data in a database.

2️⃣ Start a PHP Session:
-> A session is started with the session_start() function.
-> Session variables are set with the PHP global variable: $_SESSION.
-> Now, let's create a new page called "demo_session1.php". In this page, we start a new PHP session and set some session variables:
    Example:
        <?php
        // Start the session
        session_start();
        ?>
        <!DOCTYPE html>
        <html>
        <body>

        <?php
        // Set session variables
        $_SESSION["favcolor"] = "green";
        $_SESSION["favanimal"] = "cat";
        echo "Session variables are set.";
        ?>

        </body>
        </html>

-> Note: The session_start() function must be the very first thing in your document. Before any HTML tags.

3️⃣ Get PHP Session Variable Values:
-> Next, we create another page called "demo_session2.php". From this page, we will access the session information we set on the first page ("demo_session1.php").
-> Notice that session variables are not passed individually to each new page, instead they are retrieved from the session we open at the beginning of each page (session_start()).
-> Also notice that all session variable values are stored in the global $_SESSION variable:
    Example:
        <?php
        session_start();
        ?>
        <!DOCTYPE html>
        <html>
        <body>

        <?php
        // Echo session variables that were set on previous page
        echo "Favorite color is " . $_SESSION["favcolor"] . ".<br>";
        echo "Favorite animal is " . $_SESSION["favanimal"] . ".";
        ?>

        </body>
        </html>

-> Another way to show all the session variable values for a user session is to run the following code:
    Example:
        <?php
        session_start();
        ?>
        <!DOCTYPE html>
        <html>
        <body>

        <?php
        print_r($_SESSION);
        ?>

        </body>
        </html>

# How does it work? How does it know it's me?
-> Most sessions set a user-key on the user's computer that looks something like this: 765487cf34ert8dede5a562e4f3a7e12. Then, when a session is opened on another page, it scans the computer for a user-key. If there is a match, it accesses that session, if not, it starts a new session.

4️⃣ Modify a PHP Session Variable:
-> To change a session variable, just overwrite it:
    Example:
        <?php
        session_start();
        ?>
        <!DOCTYPE html>
        <html>
        <body>

        <?php
        // to change a session variable, just overwrite it
        $_SESSION["favcolor"] = "yellow";
        print_r($_SESSION);
        ?>

        </body>
        </html>

5️⃣ Destroy a PHP Session:
-> To remove all global session variables and destroy the session, use session_unset() and session_destroy():
    Example:
        <?php
        session_start();
        ?>
        <!DOCTYPE html>
        <html>
        <body>

        <?php
        // remove all session variables
        session_unset();

        // destroy the session
        session_destroy();
        ?>

        </body>
        </html>